name: angular-dotnet-docker-demo
services:
  nginx:
    build: ./nginx-reverse-proxy
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    # Environment variables (uncomment to use .env file)
    # env_file:
    #   - .env.local

  backend:
    build: ./backend-csharp-dotnet
    # ports:
    #   - "8080:8080"
    depends_on:
      - postgres
    # Environment variables (uncomment to use .env file)
    # env_file:
    #   - .env.local
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=boilerplate_db;Username=boilerplate_user;Password=boilerplate_pass
      - Logging__LogLevel__Default=Information
    #   - JWT_SECRET=${JWT_SECRET:-default-secret-key}
    #   - LOG_LEVEL=${LOG_LEVEL:-Information}

  frontend:
    build: ./frontend-angular
    # ports:
    #   - "4200:80"
    depends_on:
      - backend
    # Environment variables (uncomment to use .env file)
    # env_file:
    #   - .env.local
    # environment:
    #   - NG_APP_API_URL=${NG_APP_API_URL:-http://localhost/api}
    #   - NG_APP_ENV=${NG_APP_ENV:-development}
    #   - NODE_ENV=production

  postgres:
    image: postgres:18.0-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: boilerplate_db
      POSTGRES_USER: boilerplate_user
      POSTGRES_PASSWORD: boilerplate_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Note: PostgreSQL is only accessible by backend container (no exposed ports)
    # This provides internal network access only for security

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge